#!/bin/sh

# Generalization of the `muxify` scripts that are often found in the
# rally projects. Rather than copy/pasta the same script everywhere,
# this can go in a general bin dir and work for any project

# Use $1 as the directory or cwd if not set
if [ -z "$1" ]
then
  DIR=.
else
  DIR=~/projects/$1
fi

if [ -z "$REPO_PREFIX" ]
then
  REPO_PREFIX="https://github.com/RallySoftware"
fi

session_name () {
  echo $1 | sed -E -e "s/[^a-zA-Z0-9_-]+/_/g"
}

# Make sure we have a real clojure project
if [ ! -d $DIR ]
then
  REPO_NAME=$(basename $DIR)
  if ! git clone $REPO_PREFIX/$REPO_NAME $DIR
  then
    echo "Could not find the repo '$REPO_PREFIX/REPO_NAME'"
    exit 1
  fi
fi

# Absolutize the path
export DIR=$(cd $DIR; pwd)

# session name is the project repo name
export SESSION_NAME=$(session_name $(basename $DIR))

cd $DIR

[ -f $DIR/project.clj ] && PROJECT="project.clj" || PROJECT=""

if ! tmux has-session -t $SESSION_NAME
then
  tmux new-session -s $SESSION_NAME -d -n repl

  # Open project.clj in the user's editor if set
  if [ ! -z "$EDITOR" ]
  then
    tmux send-keys -t $SESSION_NAME "$EDITOR $PROJECT" C-m
  fi

  tmux new-window -n editor

  if [ ! -z "$PROJECT" ]
  then
    tmux send-keys -t $SESSION_NAME "lein repl" C-m
  fi

  tmux new-window -n test-runner
  tmux new-window -n misc -t $SESSION_NAME

  tmux select-window -t $SESSION_NAME:0

  if [ -f $DIR/tmux.extra ]
  then
    source $DIR/tmux.extra
  fi
fi

if [ -z "$SKIP_ATTACH" ]
then
  tmux attach-session -t $SESSION_NAME
fi
